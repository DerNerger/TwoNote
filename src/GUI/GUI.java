/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import java.awt.Component;
import java.awt.TrayIcon.MessageType;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.sql.SQLException;

import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

import Tools.TextEditTool;
import Tools.Tool;
import Tools.ToolEndsType;
import Tools.ToolReadyHandler;

import pageData.Content;
import pageData.ContentType;
import pageData.DirectoryAlreadyExistsException;
import pageData.DirectoryDoesNotExistsException;
import pageData.TextBox;

import dataManagement.Model;
import dataManagement.Tree;
import dataProcessing.Controller;

/**
 *
 * @author felilein
 */
public class GUI extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;
	
	Model model;
	Controller controller;
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        try {
        	model = new Model();
        	controller = new Controller(model);
        	refreshComboBoxBooks();
        	refreshTree();
		} catch (ClassNotFoundException | SQLException e) {
			JOptionPane.showMessageDialog(jPanel1, e.getLocalizedMessage(), "Fehler!", JOptionPane.ERROR_MESSAGE);
			System.exit(1);
		}
        buttonCurser.setSelected(true);
        loadPage("Startseite", "", "");
    }
    
    public void refreshTree()
    {
    	try {
			controller.refreshTree();
		} catch (SQLException e) {
			JOptionPane.showMessageDialog(jPanel1, e.getLocalizedMessage(), "Fehler!", JOptionPane.ERROR_MESSAGE);
			System.exit(1);
		}
    	Tree tree = controller.getDataTree();
    	if(tree.hasNoChildren())
    	{
    		treeBookView.setVisible(false);
    		return;
    	}
    	else
    		treeBookView.setVisible(true);
    	for(Tree book : tree.getChildren())
    	{
    		if(book.toString().equals(comboBoxBookChange.getSelectedItem()))
    		{
    			//load the Tree for the selected item
    			DefaultMutableTreeNode bookTree = new DefaultMutableTreeNode(book.toString());
    			for(Tree chapter : book.getChildren())
    			{
    				DefaultMutableTreeNode chapterTree = new DefaultMutableTreeNode(chapter.toString());
    				for(Tree page : chapter.getChildren())
    				{
    					DefaultMutableTreeNode pageTree = new DefaultMutableTreeNode(page.toString());
    					chapterTree.add(pageTree);
    				}
    				bookTree.add(chapterTree);
    			}
    			treeBookView.setModel(new DefaultTreeModel(bookTree));
    			break;
    		}
    	}
    }
    
    private void refreshComboBoxBooks()
    {
    	try {
			controller.refreshTree();
		} catch (SQLException e) {
			JOptionPane.showMessageDialog(jPanel1, e.getLocalizedMessage(), "Fehler!", JOptionPane.ERROR_MESSAGE);
			System.exit(1);
		}
    	Tree tree = controller.getDataTree();
    	comboBoxBookChange.removeAllItems();
    	jComboBoxFatherBook.removeAllItems();
    	jComboBoxFatherBook2.removeAllItems();
    	for(Tree t : tree.getChildren())
    	{
    		comboBoxBookChange.addItem(t.toString());
    		jComboBoxFatherBook.addItem(t.toString());
    		jComboBoxFatherBook2.addItem(t.toString());
    	}
    }
    
    private void refreshComboBoxChapter() {
        Tree tree = controller.getDataTree();
        for(Tree t : tree.getChildren())
        {
        	if(t.toString().equals(jComboBoxFatherBook2.getSelectedItem()))
        	{
        		jComboBoxFatherChapter.removeAllItems();
        		for(Tree chapter : t.getChildren())
        			jComboBoxFatherChapter.addItem(chapter.toString());
        		break;
        	}
        }
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogCreateBook = new javax.swing.JDialog();
        buttonCreateNewBook = new javax.swing.JButton();
        textFieldNewBook = new javax.swing.JTextField();
        labelNameBook = new javax.swing.JLabel();
        buttonGroupToolbar = new javax.swing.ButtonGroup();
        dialogCreateChapter = new javax.swing.JDialog();
        labelNameChapter = new javax.swing.JLabel();
        buttonCreateNewChapter = new javax.swing.JButton();
        textFieldNewChapter = new javax.swing.JTextField();
        jComboBoxFatherBook = new javax.swing.JComboBox<>();
        labelNameChapter1 = new javax.swing.JLabel();
        dialogCreatePage = new javax.swing.JDialog();
        labelNameFatherChapter = new javax.swing.JLabel();
        labelNamePage = new javax.swing.JLabel();
        buttonCreateNewPage = new javax.swing.JButton();
        textFieldNewPage = new javax.swing.JTextField();
        jComboBoxFatherChapter = new javax.swing.JComboBox<>();
        labelNameFatherBook2 = new javax.swing.JLabel();
        jComboBoxFatherBook2 = new javax.swing.JComboBox<>();
        scrollPaneBookView = new javax.swing.JScrollPane();
        treeBookView = new javax.swing.JTree();
        buttonNewBook = new javax.swing.JButton();
        comboBoxBookChange = new javax.swing.JComboBox<>();
        buttonNewChapter = new javax.swing.JButton();
        buttonNewPage = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        buttonCurser = new javax.swing.JToggleButton();
        buttonText = new javax.swing.JToggleButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        buttonDelete = new javax.swing.JButton();

        dialogCreateBook.setTitle("Bitte geben Sie einen Namen ein");
        dialogCreateBook.setMinimumSize(new java.awt.Dimension(590, 195));

        buttonCreateNewBook.setText("Buch anlegen");
        buttonCreateNewBook.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreateNewBookActionPerformed(evt);
            }
        });

        textFieldNewBook.setText("neues Buch");

        labelNameBook.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        labelNameBook.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelNameBook.setText("Name: ");

        javax.swing.GroupLayout dialogCreateBookLayout = new javax.swing.GroupLayout(dialogCreateBook.getContentPane());
        dialogCreateBook.getContentPane().setLayout(dialogCreateBookLayout);
        dialogCreateBookLayout.setHorizontalGroup(
            dialogCreateBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogCreateBookLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(dialogCreateBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonCreateNewBook, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dialogCreateBookLayout.createSequentialGroup()
                        .addComponent(labelNameBook, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldNewBook, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(168, Short.MAX_VALUE))
        );
        dialogCreateBookLayout.setVerticalGroup(
            dialogCreateBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogCreateBookLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(dialogCreateBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldNewBook, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNameBook, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCreateNewBook, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(164, Short.MAX_VALUE))
        );

        dialogCreateChapter.setTitle("Bitte geben Sie einen Namen ein");
        dialogCreateChapter.setMinimumSize(new java.awt.Dimension(590, 230));

        labelNameChapter.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        labelNameChapter.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelNameChapter.setText("Name: ");

        buttonCreateNewChapter.setText("Kapitel anlegen");
        buttonCreateNewChapter.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreateNewChapterActionPerformed(evt);
            }
        });

        textFieldNewChapter.setText("neues Kapitel");

        labelNameChapter1.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        labelNameChapter1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelNameChapter1.setText("Buch: ");

        javax.swing.GroupLayout dialogCreateChapterLayout = new javax.swing.GroupLayout(dialogCreateChapter.getContentPane());
        dialogCreateChapter.getContentPane().setLayout(dialogCreateChapterLayout);
        dialogCreateChapterLayout.setHorizontalGroup(
            dialogCreateChapterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogCreateChapterLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(dialogCreateChapterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonCreateNewChapter, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dialogCreateChapterLayout.createSequentialGroup()
                        .addGroup(dialogCreateChapterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelNameChapter, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelNameChapter1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dialogCreateChapterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxFatherBook, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFieldNewChapter, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        dialogCreateChapterLayout.setVerticalGroup(
            dialogCreateChapterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogCreateChapterLayout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addGroup(dialogCreateChapterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxFatherBook, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNameChapter1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dialogCreateChapterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldNewChapter, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNameChapter, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCreateNewChapter, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        dialogCreatePage.setTitle("Bitte geben Sie einen Namen ein");
        dialogCreatePage.setMinimumSize(new java.awt.Dimension(578, 268));

        labelNameFatherChapter.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        labelNameFatherChapter.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelNameFatherChapter.setText("Kapitel: ");

        labelNamePage.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        labelNamePage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelNamePage.setText("Name: ");

        buttonCreateNewPage.setText("Seite anlegen");
        buttonCreateNewPage.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreateNewPageActionPerformed(evt);
            }
        });

        textFieldNewPage.setText("neue Seite");

        labelNameFatherBook2.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        labelNameFatherBook2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelNameFatherBook2.setText("Buch: ");

        jComboBoxFatherBook2.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFatherBook2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogCreatePageLayout = new javax.swing.GroupLayout(dialogCreatePage.getContentPane());
        dialogCreatePage.getContentPane().setLayout(dialogCreatePageLayout);
        dialogCreatePageLayout.setHorizontalGroup(
            dialogCreatePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogCreatePageLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(dialogCreatePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(dialogCreatePageLayout.createSequentialGroup()
                        .addComponent(labelNameFatherBook2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxFatherBook2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, dialogCreatePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(buttonCreateNewPage, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(dialogCreatePageLayout.createSequentialGroup()
                            .addGroup(dialogCreatePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(labelNameFatherChapter, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelNamePage, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(dialogCreatePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jComboBoxFatherChapter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textFieldNewPage, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)))))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        dialogCreatePageLayout.setVerticalGroup(
            dialogCreatePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogCreatePageLayout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(dialogCreatePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxFatherBook2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNameFatherBook2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dialogCreatePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxFatherChapter, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNameFatherChapter, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dialogCreatePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldNewPage, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNamePage, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCreateNewPage, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TwoNote");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        treeBookView.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        treeBookView.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
			public void mouseClicked(java.awt.event.MouseEvent evt) {
                treeBookViewMouseClicked(evt);
            }
        });
        scrollPaneBookView.setViewportView(treeBookView);

        buttonNewBook.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        buttonNewBook.setText("neues Buch anlegen");
        buttonNewBook.setMaximumSize(new java.awt.Dimension(139, 30));
        buttonNewBook.setMinimumSize(new java.awt.Dimension(139, 30));
        buttonNewBook.setPreferredSize(new java.awt.Dimension(139, 30));
        buttonNewBook.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewBookActionPerformed(evt);
            }
        });

        comboBoxBookChange.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        comboBoxBookChange.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxBookChangeActionPerformed(evt);
            }
        });

        buttonNewChapter.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        buttonNewChapter.setText("neues Kapitel anlegen");
        buttonNewChapter.setMaximumSize(new java.awt.Dimension(139, 30));
        buttonNewChapter.setMinimumSize(new java.awt.Dimension(139, 30));
        buttonNewChapter.setPreferredSize(new java.awt.Dimension(139, 30));
        buttonNewChapter.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewChapterActionPerformed(evt);
            }
        });

        buttonNewPage.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        buttonNewPage.setText("neue Seite anlegen");
        buttonNewPage.setMaximumSize(new java.awt.Dimension(139, 30));
        buttonNewPage.setMinimumSize(new java.awt.Dimension(139, 30));
        buttonNewPage.setPreferredSize(new java.awt.Dimension(139, 30));
        buttonNewPage.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewPageActionPerformed(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setMaximumSize(new java.awt.Dimension(80, 80));
        jToolBar1.setMinimumSize(new java.awt.Dimension(80, 80));
        jToolBar1.setPreferredSize(new java.awt.Dimension(80, 80));

        buttonGroupToolbar.add(buttonCurser);
        buttonCurser.setIcon(new javax.swing.ImageIcon("/home/felilein/NetBeansProjects/TwoNote/pictures/curserBild.png")); // NOI18N
        buttonCurser.setText("Zeiger");
        buttonCurser.setFocusable(false);
        buttonCurser.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonCurser.setMaximumSize(new java.awt.Dimension(80, 80));
        buttonCurser.setMinimumSize(new java.awt.Dimension(80, 80));
        buttonCurser.setPreferredSize(new java.awt.Dimension(80, 80));
        buttonCurser.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonCurser.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCurserActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonCurser);

        buttonGroupToolbar.add(buttonText);
        buttonText.setIcon(new javax.swing.ImageIcon("/home/felilein/NetBeansProjects/TwoNote/pictures/textBild.png")); // NOI18N
        buttonText.setText("Text");
        buttonText.setFocusable(false);
        buttonText.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonText.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonText.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTextActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonText);

        jTabbedPane1.setBackground(new java.awt.Color(254, 254, 254));
        jTabbedPane1.setBorder(new javax.swing.border.MatteBorder(null));

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
			public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1080, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 592, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Startseite", jPanel1);

        buttonDelete.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        buttonDelete.setText("löschen");
        buttonDelete.setMaximumSize(new java.awt.Dimension(139, 30));
        buttonDelete.setMinimumSize(new java.awt.Dimension(139, 30));
        buttonDelete.setPreferredSize(new java.awt.Dimension(139, 30));
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1086, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxBookChange, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(scrollPaneBookView)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonNewBook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonNewPage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonNewChapter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonNewBook, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(buttonNewPage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonNewChapter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxBookChange, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPaneBookView, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("tabbedPane");
        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonTextActionPerformed

    private void buttonCurserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCurserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCurserActionPerformed

    private void buttonNewBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewBookActionPerformed
        // Open the dialog to create a new book
        dialogCreateBook.setVisible(true);
    }//GEN-LAST:event_buttonNewBookActionPerformed

    private void buttonNewChapterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewChapterActionPerformed
        dialogCreateChapter.setVisible(true);
    }//GEN-LAST:event_buttonNewChapterActionPerformed

    private void buttonNewPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewPageActionPerformed
        // Open the dialog to create a new page
    	refreshComboBoxChapter();
        dialogCreatePage.setVisible(true);
    }//GEN-LAST:event_buttonNewPageActionPerformed

	private void comboBoxBookChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxBookChangeActionPerformed
        refreshTree();
    }//GEN-LAST:event_comboBoxBookChangeActionPerformed

    private void buttonCreateNewBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreateNewBookActionPerformed
        //create the new book/chapter/page
       try {
		model.createBook(textFieldNewBook.getText());
	} catch (SQLException e) {
		JOptionPane.showMessageDialog(jPanel1, e.getLocalizedMessage(), "Fehler!", JOptionPane.ERROR_MESSAGE);
		System.exit(1);
	} catch (DirectoryAlreadyExistsException e)
	{
		JOptionPane.showMessageDialog(jPanel1,"\""+e.getDirectoryTitle()+"\" existiert bereits.  Bitte wählen sie einen anderen Namen.", "Name bereits vorhanden!", JOptionPane.ERROR_MESSAGE);
	}
        refreshComboBoxBooks();
        comboBoxBookChange.setSelectedItem(textFieldNewBook.getText());
        textFieldNewBook.setText("neues Buch");
        dialogCreateBook.setVisible(false);
    }//GEN-LAST:event_buttonCreateNewBookActionPerformed

    private void buttonCreateNewChapterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreateNewChapterActionPerformed
        try {
			model.createChapter(textFieldNewChapter.getText(), (String) jComboBoxFatherBook.getSelectedItem());
		} catch (DirectoryDoesNotExistsException e) {
			JOptionPane.showMessageDialog(jPanel1,"\""+e.getDirectoryTitle()+"\" existiert nicht.  Bitte wählen sie einen anderes.", "Verzeichnis existiert nicht!", JOptionPane.ERROR_MESSAGE);
		} catch (DirectoryAlreadyExistsException e)
    	{
    		JOptionPane.showMessageDialog(jPanel1,"\""+e.getDirectoryTitle()+"\" existiert bereits.  Bitte wählen sie einen anderen Namen.", "Name bereits vorhanden!", JOptionPane.ERROR_MESSAGE);
    	} catch (SQLException e)
    	{
    		JOptionPane.showMessageDialog(jPanel1, e.getLocalizedMessage(), "Fehler!", JOptionPane.ERROR_MESSAGE);
			System.exit(1);
    	}
        textFieldNewChapter.setText("neues Kapitel");
        refreshTree();
    	dialogCreateChapter.setVisible(false);
    }//GEN-LAST:event_buttonCreateNewChapterActionPerformed

    private void buttonCreateNewPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreateNewPageActionPerformed
        try {
			model.createPage(textFieldNewPage.getText(),(String) jComboBoxFatherChapter.getSelectedItem(),(String) jComboBoxFatherBook2.getSelectedItem());
		} catch (DirectoryDoesNotExistsException e) {
			JOptionPane.showMessageDialog(jPanel1,"\""+e.getDirectoryTitle()+"\" existiert nicht.  Bitte wählen sie einen anderes.", "Verzeichnis existiert nicht!", JOptionPane.ERROR_MESSAGE);
		} catch (DirectoryAlreadyExistsException e)
    	{
    		JOptionPane.showMessageDialog(jPanel1,"\""+e.getDirectoryTitle()+"\" existiert bereits.  Bitte wählen sie einen anderen Namen.", "Name bereits vorhanden!", JOptionPane.ERROR_MESSAGE);
    	} catch (SQLException e)
    	{
    		JOptionPane.showMessageDialog(jPanel1, e.getLocalizedMessage(), "Fehler!", JOptionPane.ERROR_MESSAGE);
			System.exit(1);
    	}
        textFieldNewPage.setText("neue Seite");
        refreshTree();
    	dialogCreatePage.setVisible(false);
    }//GEN-LAST:event_buttonCreateNewPageActionPerformed

    private void treeBookViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeBookViewMouseClicked
        TreePath tree = treeBookView.getSelectionPath();
        if(tree==null)
        	return;
    	String path = tree.toString();
        String[] pathParts = path.split(", ");
        if(pathParts.length < 3)
        	return;
        pathParts[0] = pathParts[0].substring(1, pathParts[0].length());
        pathParts[2] = pathParts[2].substring(0, pathParts[2].length()-1);
        loadPage(pathParts[2], pathParts[1], pathParts[0]);
        //load the Page
        
    }//GEN-LAST:event_treeBookViewMouseClicked
    
    private void loadPage(String page, String chapter, String book)
    {
    	try {
			controller.loadPage(page, chapter, book);
			jPanel1.removeAll();
			for(final Content c : controller.getContent())
			{
		    	handleToolEnds(c, ToolEndsType.Draw);
			}
	        jTabbedPane1.remove(jPanel1);
	        jTabbedPane1.addTab(page, jPanel1);
		} catch (ClassNotFoundException| SQLException | IOException e) {
			JOptionPane.showMessageDialog(jPanel1, e.getLocalizedMessage(), "Fehler!", JOptionPane.ERROR_MESSAGE);
			System.exit(1);
		} catch (DirectoryDoesNotExistsException e)
		{
			JOptionPane.showMessageDialog(jPanel1,"\""+e.getDirectoryTitle()+"\" existiert nicht.  Bitte wählen sie einen anderes.", "Verzeichnis existiert nicht!", JOptionPane.ERROR_MESSAGE);
		}
    }

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
    	if(buttonCurser.isSelected())
    		return;
        Content c = controller.createContent(ContentType.textBox, evt.getX(), evt.getY());
        editContent(c);
    }//GEN-LAST:event_jPanel1MouseClicked
    
    public void handleToolEnds(final Content c, ToolEndsType type)
    {
    	try {
        	final Component comp = c.draw(jPanel1);
        	if(comp==null)
        	{
        		controller.deleteContent(c);
        	}
        	else{
            	comp.addMouseListener(new MouseAdapter() {
            		public void mouseClicked(MouseEvent evt)
            		{
            			jPanel1.remove(comp);
            			buttonText.setSelected(true);
            			editContent(c);
            		}
        		});
            	controller.saveContent(c);
        	}
		} catch (SQLException | IOException e) {
			JOptionPane.showMessageDialog(jPanel1, e.getLocalizedMessage(), "Fehler!", JOptionPane.ERROR_MESSAGE);
			System.exit(1);
		} catch (DirectoryDoesNotExistsException e)
		{
			JOptionPane.showMessageDialog(jPanel1,"\""+e.getDirectoryTitle()+"\" existiert nicht.  Bitte wählen sie einen anderes.", "Verzeichnis existiert nicht!", JOptionPane.ERROR_MESSAGE);
		}
    	if(type != ToolEndsType.FocusLost)
    		buttonCurser.setSelected(true);
    }
    
    private void editContent(Content c)
    {
    	Tool t = new TextEditTool(jPanel1,(TextBox) c);
        t.drawTool();
        t.addToolReadyHandler(new ToolReadyHandler() {
			@Override
			public void toolEnds(Content c, ToolEndsType type) {
				handleToolEnds(c, type);
			}
		});
    }

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        if(treeBookView.isVisible()==false)
        {
        	JOptionPane.showMessageDialog(jPanel1, "Sie haben kein Element ausgewählt.", "Nichts ausgewählt!", JOptionPane.ERROR_MESSAGE);
        	return;
        }
    	TreePath tree = treeBookView.getSelectionPath();
        if(tree==null)
        	return;
    	String path = tree.toString();
        String[] pathParts = path.split(", ");
        try
        {
        	pathParts[0] = pathParts[0].substring(1, pathParts[0].length());
        	if(pathParts.length == 1)
            {
        		pathParts[0] = pathParts[0].substring(0, pathParts[0].length()-1);
            	model.deleteBook(pathParts[0]);
            	refreshComboBoxBooks();
        		if(pathParts[0].equals(controller.getCurrentPageInformation().getBookName()))
        			loadPage("Startseite", "", "");
            }     
            else
            {
            	if(pathParts.length == 2)
            	{
            		pathParts[1] = pathParts[1].substring(0, pathParts[1].length()-1);
            		model.deleteChapter(pathParts[1], pathParts[0]);
            		if(pathParts[1].equals(controller.getCurrentPageInformation().getChapterName()))
            			loadPage("Startseite", "", "");
            	}
            	else
            	{
            		pathParts[2] = pathParts[2].substring(0, pathParts[2].length()-1);
            		model.deletePage(pathParts[2], pathParts[1], pathParts[0]);
            		if(pathParts[2].equals(controller.getCurrentPageInformation().getPageName()))
            			loadPage("Startseite", "", "");
            	}
            }
        	refreshTree();
        }
        catch(SQLException e)
        {
			JOptionPane.showMessageDialog(jPanel1, e.getLocalizedMessage(), "Fehler!", JOptionPane.ERROR_MESSAGE);
			System.exit(1);
        }
        catch(DirectoryDoesNotExistsException e)
        {
        	JOptionPane.showMessageDialog(jPanel1,"\""+e.getDirectoryTitle()+"\" existiert nicht.  Bitte wählen sie einen anderes.", "Verzeichnis existiert nicht!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void jComboBoxFatherBook2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFatherBook2ActionPerformed
    	refreshComboBoxChapter();
    }//GEN-LAST:event_jComboBoxFatherBook2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
			public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCreateNewBook;
    private javax.swing.JButton buttonCreateNewChapter;
    private javax.swing.JButton buttonCreateNewPage;
    private javax.swing.JToggleButton buttonCurser;
    private javax.swing.JButton buttonDelete;
    private javax.swing.ButtonGroup buttonGroupToolbar;
    private javax.swing.JButton buttonNewBook;
    private javax.swing.JButton buttonNewChapter;
    private javax.swing.JButton buttonNewPage;
    private javax.swing.JToggleButton buttonText;
    private javax.swing.JComboBox<String> comboBoxBookChange;
    private javax.swing.JDialog dialogCreateBook;
    private javax.swing.JDialog dialogCreateChapter;
    private javax.swing.JDialog dialogCreatePage;
    private javax.swing.JComboBox<String> jComboBoxFatherBook;
    private javax.swing.JComboBox<String> jComboBoxFatherBook2;
    private javax.swing.JComboBox<String> jComboBoxFatherChapter;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel labelNameBook;
    private javax.swing.JLabel labelNameChapter;
    private javax.swing.JLabel labelNameChapter1;
    private javax.swing.JLabel labelNameFatherBook2;
    private javax.swing.JLabel labelNameFatherChapter;
    private javax.swing.JLabel labelNamePage;
    private javax.swing.JScrollPane scrollPaneBookView;
    private javax.swing.JTextField textFieldNewBook;
    private javax.swing.JTextField textFieldNewChapter;
    private javax.swing.JTextField textFieldNewPage;
    private javax.swing.JTree treeBookView;
    // End of variables declaration//GEN-END:variables
}